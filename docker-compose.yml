version: '3'

services:
    # Nginx service
    nginx:
        build:
            context: .
            dockerfile: './docker/nginx/Dockerfile'
        container_name: 'skote_nginx'
        volumes:
            - './app/public:/var/www/app/public'
            - ./app/storage/app:/var/www/app/storage/app # need setting this to use laravel storage with nginx
            - ./docker/nginx/${APP_ENV:-local}.conf:/etc/nginx/nginx.conf
        networks:
            - skote
        ports:
            - '9000:80'
        expose:
            - '80'
        links:
            - 'web'
            - 'app'
        depends_on:
            - 'web'
            - 'app'

    # (VueJS) End User application
    web:
        build:
            context: .
            dockerfile: './docker/web/Dockerfile'
        container_name: 'skote_web'
        environment:
            TZ: '${APP_TIMEZONE:-UTC}'
        volumes:
            - './web:/var/www/web'
            - './docker/web/entrypoint.sh:/entrypoint.sh'
            # - 'dependencies:/var/www/web/node_modules' # this enables a much faster start/reload
        working_dir: '/var/www/web'
        networks:
            - skote
        ports:
            - '3000:3000' # when run 'npm run dev'
        expose:
            - '3000'
        command: ['/entrypoint.sh']

    # (Laravel) API application
    app:
        build:
            context: .
            dockerfile: './docker/app/Dockerfile'
        container_name: 'skote_app'
        environment:
            TZ: '${APP_TIMEZONE:-UTC}'
        volumes:
            - './app:/var/www/app'
            - './docker/app/config/php/php.ini:/usr/local/etc/php/php.ini'
            - './docker/app/entrypoint.sh:/entrypoint.sh'
        working_dir: '/var/www/app'
        networks:
            - skote
        expose:
            - '9000'
        command: ['/entrypoint.sh']
        links:
            - 'db'
        depends_on:
            - 'db'

    # MySQL database
    db:
        build:
            context: .
            dockerfile: './docker/db/Dockerfile'
        container_name: 'skote_db'
        volumes:
            - 'skote-mysql:/var/lib/mysql'
        networks:
            - skote
        environment:
            TZ: '${APP_TIMEZONE:-UTC}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            MYSQL_TCP_PORT: 3307 # Define this var in case not run on default tcp port 
        ports:
            - "${FORWARD_DB_PORT:-13307}:3307"
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']

networks:
    skote:
        driver: bridge
volumes:
    skote-mysql: # Use mysql local (must install mysql local to use)
        driver: local
    dependencies:
